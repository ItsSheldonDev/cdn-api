// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

generator seed {
  provider = "prisma-seed"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model File {
  id            String    @id @default(cuid())
  originalName  String
  customName    String
  filePath      String
  size          Int
  mimeType      String
  shareCode     String    @unique
  password      String?
  expiresAt     DateTime?
  downloadCount Int       @default(0)
  metadata      Json?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  user          User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String?

  @@index([userId])
  @@index([shareCode])
  @@index([expiresAt])
}

model User {
  id               String    @id @default(cuid())
  email            String    @unique
  password         String
  isAdmin          Boolean   @default(false)
  isApproved       Boolean   @default(false)
  approvalExpires  DateTime?
  loginAttempts    Int       @default(0)
  lastLoginAttempt DateTime?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  files            File[]

  @@index([email])
  @@index([isApproved, approvalExpires])
}

model Settings {
  id                      String    @id @default("1")
  maxFileSize            Int       @default(100)       // MB
  maxAdminFileSize       Int       @default(10240)    // MB
  allowedFileTypes       String[]  @default(["*"])
  defaultExpiration      String    @default("never")
  approvalRequired       Boolean   @default(true)
  approvalExpiration     Int       @default(72)       // heures
  maxStoragePerUser     Int       @default(1024)     // MB
  minPasswordLength      Int       @default(8)
  requireEmailVerification Boolean  @default(true)
  maxLoginAttempts      Int       @default(5)
  updatedAt             DateTime  @updatedAt
}

model Statistics {
  id             String   @id @default(cuid())
  totalFiles     Int
  totalSize      Int      // bytes
  totalDownloads Int
  filesByType    Json
  timestamp      DateTime @default(now())

  @@index([timestamp])
}